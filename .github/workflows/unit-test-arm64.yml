name: Unit Tests ARM
on:
  push:
    branches:
      - arm_support
  pull_request:

jobs:
  node-tests-stable:
    strategy:
      fail-fast: false
      matrix:
        node_version: ["10", "12", "14", "16"]
    runs-on: ubuntu-20.04
    env:
      NPM_CONFIG_UNSAFE_PERM: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
      - name: restore lerna
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            package-lock.json
            packages/*/node_modules
            packages/*/package-lock.json
            experimental/packages/*/node_modules
            experimental/packages/*/package-lock.json
          key: node-tests-${{ runner.os }}-14-${{ hashFiles('package.json', 'packages/*/package.json', 'experimental/packages/*/package.json') }}-04292022
      - name: Bootstrap
        run: |
          docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
          arm64v8/ubuntu:20.04 \
          bash -exc 'apt-get update && apt-get -y install curl wget sudo git && \
          curl -fsSL https://deb.nodesource.com/setup_${{ matrix.node_version }}.x | sudo -E bash - && \
          apt-get install -y nodejs && \
          npm install --ignore-scripts && \
          chmod 777 /ws && \
          sudo chown -R 1001:121 "/root/.npm" && \
          npx lerna bootstrap --no-ci --hoist --nohoist='zone.js' --ignore @opentelemetry/selenium-tests'
      - name: Build
        run: |
          docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
          arm64v8/ubuntu:20.04 \
          bash -exc 'apt-get update && apt-get -y install curl wget sudo git && \
          curl -fsSL https://deb.nodesource.com/setup_${{ matrix.node_version }}.x | sudo -E bash - && \
          apt-get install -y nodejs && \
          node -v && \
          chmod 777 /ws && \
          git config --global --add safe.directory /ws && \
          git config --global --add safe.directory /ws/experimental/packages/otlp-grpc-exporter-base/protos && \
          git config --global --add safe.directory /ws/experimental/packages/otlp-proto-exporter-base/protos && \
          npm run compile'
      - name: Unit tests
        run: |
          docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
          arm64v8/ubuntu:20.04 \
          bash -exc 'apt-get update && apt-get -y install curl wget sudo git && \
          curl -fsSL https://deb.nodesource.com/setup_${{ matrix.node_version }}.x | sudo -E bash - && \
          apt-get install -y nodejs && \
          npm run test'
      - name: Report Coverage
        if: ${{ matrix.node_version == '14' }}
        run: |
          docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
          arm64v8/ubuntu:20.04 \
          bash -exc 'apt-get update && apt-get -y install curl wget sudo git && \
          curl -fsSL https://deb.nodesource.com/setup_${{ matrix.node_version }}.x | sudo -E bash - && \
          apt-get install -y nodejs && \
          npm run codecov'

