name: Unit Tests
on:
  push:
    branches:
      - test_arm
  pull_request:

jobs:
  node-tests:
    strategy:
      fail-fast: false
      matrix:
        node_version:
          - "14"
          - "16"
          - "18"
    runs-on: ubuntu-latest
    env:
      NPM_CONFIG_UNSAFE_PERM: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}

      - run: npm install -g npm@latest

      - name: restore lerna
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            package-lock.json
            packages/*/node_modules
            packages/*/package-lock.json
            experimental/packages/*/node_modules
            experimental/packages/*/package-lock.json
          key: node-tests-${{ runner.os }}-${{ matrix.node_version }}-${{ hashFiles('package.json', 'packages/*/package.json', 'experimental/packages/*/package.json') }}-04292022

      - name: Bootstrap
        run: |
          npm install --ignore-scripts
          npx lerna bootstrap --no-ci --hoist --nohoist='zone.js' --ignore @opentelemetry/selenium-tests

      - name: Build ðŸ”§
        run: |
          npm run compile

      - name: Unit tests
        run: npm run test
      - name: Report Coverage
        run: npm run codecov
        if: ${{ matrix.node_version == '14' }}
  node-tests-arm64:
    strategy:
      fail-fast: false
      matrix:
        node_version:
          - "14"
          - "16"
          - "18"
    runs-on: ubuntu-latest
    env:
      NPM_CONFIG_UNSAFE_PERM: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
      - name: restore lerna
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            package-lock.json
            packages/*/node_modules
            packages/*/package-lock.json
            experimental/packages/*/node_modules
            experimental/packages/*/package-lock.json
          key: node-tests-${{ runner.os }}-${{ matrix.node_version }}-${{ hashFiles('package.json', 'packages/*/package.json', 'experimental/packages/*/package.json') }}-04292022
      - name: Bootstrap
        run: |
          docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
          arm64v8/ubuntu:20.04 \
          bash -exc 'apt-get update && apt-get -y install curl wget sudo git && \
          curl -fsSL https://deb.nodesource.com/setup_${{ matrix.node_version }}.x | sudo -E bash - && \
          apt-get install -y nodejs && \
          npm install --ignore-scripts && \
          chmod 777 /ws && \
          sudo chown -R 1001:121 "/root/.npm" && \
          npx lerna bootstrap --no-ci --hoist --nohoist='zone.js' --ignore @opentelemetry/selenium-tests'
      - name: Build
        run: |
          docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
          arm64v8/ubuntu:20.04 \
          bash -exc 'apt-get update && apt-get -y install curl wget sudo git && \
          curl -fsSL https://deb.nodesource.com/setup_${{ matrix.node_version }}.x | sudo -E bash - && \
          apt-get install -y nodejs && \
          chmod 777 /ws && \
          git config --global --add safe.directory /ws && \
          git config --global --add safe.directory /ws/experimental/packages/otlp-grpc-exporter-base/protos && \
          git config --global --add safe.directory /ws/experimental/packages/otlp-proto-exporter-base/protos && \
          npm run compile'
      - name: Unit tests
        run: |
          docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
          arm64v8/ubuntu:20.04 \
          bash -exc 'apt-get update && apt-get -y install curl wget sudo git && \
          curl -fsSL https://deb.nodesource.com/setup_${{ matrix.node_version }}.x | sudo -E bash - && \
          apt-get install -y nodejs && \
          npm run test'
  node-windows-tests:
    strategy:
      fail-fast: false
    runs-on: windows-latest
    env:
      NPM_CONFIG_UNSAFE_PERM: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - run: npm install -g npm@latest

      - name: restore lerna
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            package-lock.json
            packages/*/node_modules
            packages/*/package-lock.json
            experimental/packages/*/node_modules
            experimental/packages/*/package-lock.json
          key: node-windows-tests-${{ runner.os }}-${{ hashFiles('package.json', 'packages/*/package.json', 'experimental/packages/*/package.json') }}

      - name: Bootstrap
        run: |
          npm install --ignore-scripts
          npx lerna bootstrap --no-ci --hoist --nohoist='zone.js' --ignore @opentelemetry/selenium-tests

      - name: Build ðŸ”§
        run: |
          npm run compile

      - name: Unit tests
        run: npm run test
  browser-tests:
    runs-on: ubuntu-latest
    container:
      image: circleci/node:16-browsers
    env:
      NPM_CONFIG_UNSAFE_PERM: true
    steps:
      - name: Permission Setup
        run: sudo chmod -R 777 /github /__w
      - name: Checkout
        uses: actions/checkout@v3

      - name: restore lerna
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            package-lock.json
            packages/*/node_modules
            packages/*/package-lock.json
            experimental/packages/*/node_modules
            experimental/packages/*/package-lock.json
          key: browser-tests-${{ runner.os }}-${{ hashFiles('package.json', 'packages/*/package.json', 'experimental/packages/*/package.json') }}-04292022

      - name: Bootstrap
        run: |
          npm install --ignore-scripts
          npx lerna bootstrap --no-ci --hoist --nohoist='zone.js' --ignore @opentelemetry/selenium-tests

      - name: Build ðŸ”§
        run: |
          npm run compile
          # run additional compilation variants
          npx lerna run compile

      - name: Unit tests
        run: npm run test:browser
      - name: Report Coverage
        run: npm run codecov:browser
  webworker-tests:
    runs-on: ubuntu-latest
    container:
      image: circleci/node:16-browsers
    env:
      NPM_CONFIG_UNSAFE_PERM: true
    steps:
      - name: Permission Setup
        run: sudo chmod -R 777 /github /__w
      - name: Checkout
        uses: actions/checkout@v3

      - name: restore lerna
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            package-lock.json
            packages/*/node_modules
            packages/*/package-lock.json
            experimental/packages/*/node_modules
            experimental/packages/*/package-lock.json
          key: webworker-tests-${{ runner.os }}-${{ hashFiles('package.json', 'packages/*/package.json', 'experimental/packages/*/package.json') }}-04292022

      - name: Bootstrap
        run: |
          npm install --ignore-scripts
          npx lerna bootstrap --no-ci --hoist --nohoist='zone.js'

      - name: Build ðŸ”§
        run: |
          npm run compile
          # run additional compilation variants
          npx lerna run compile

      - name: Unit tests
        run: npm run test:webworker
      - name: Report Coverage
        run: npm run codecov:webworker
